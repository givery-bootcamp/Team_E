name: Deploy

on:
  push:
    branches:
      - '**'

env:
  AWS_REGION: ap-northeast-1
  REPOSITORY_NAME: dena-training-2024-team-0-backend
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  backend-build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.22'

    - name: Build
      working-directory: ./backend
      run: go build -o myapp
    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-bin
        path: backend/myapp

  frontend-build:
    runs-on: ubuntu-latest
    needs: [backend-build]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install dependencies
      working-directory: ./frontend
      run: npm install

    - name: Build
      working-directory: ./frontend
      run: npm run build

  ecr-push:
    runs-on: ubuntu-latest
    needs: [frontend-build]
    if: github.ref == 'refs/heads/deploy'

    steps:
    - name: Download backend build artifacts
      uses: actions/download-artifact@v4
      with:
        name: backend-bin

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}

    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and push Docker image
      run: |
        ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
        IMAGE_TAG=latest

        docker build -t $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPOSITORY_NAME:$IMAGE_TAG .
        docker push $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPOSITORY_NAME:$IMAGE_TAG
