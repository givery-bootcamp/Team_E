services:
  backend:
    build:
      context: ./docker
      dockerfile: backend.Dockerfile
    ports:
      - "9000:9000"
    volumes:
      - ./backend:/go/src/myapp
      - ~/.aws/credentials:/root/.aws/credentials:ro
      - ~/.aws/config:/root/.aws/config:rosrc/myapp
    command: "air"
    depends_on:
      db:
        condition: service_healthy
    environment:
      TZ: Asia/Tokyo
  # frontend:
  #   # image: node:20.12.2
  #   # working_dir: /home/node/myapp
  #   build:
  #     context: ./
  #     dockerfile: ./docker/frontend.Dockerfile
  #   ports:
  #     - '3000:3000'
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   # command: "bash -c 'npm i && npm run dev'"
  #   environment:
  #     TZ: Asia/Tokyo
  db:
    build:
      context: ./docker
      dockerfile: mysql.Dockerfile
    volumes:
      - db-store:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./mysql/sql:/docker-entrypoint-initdb.d
      # - ./mysql/sql:/sqlscripts
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=training
    healthcheck: # here
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p$MYSQL_ROOT_PASSWORD",
        ]
      interval: 8s
      timeout: 5s
      retries: 6
      start_period: 8s
volumes:
  db-store:
